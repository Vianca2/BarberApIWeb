@page "/login"
@using Microsoft.AspNetCore.Components.Forms
@using barberiaApp.Models
@using barberiaApp.Services
@inject IAuthService AuthService
@inject NavigationManager Navigation

<PageTitle>Iniciar Sesión - Barbería</PageTitle>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h3 class="mb-0 text-center">Iniciar Sesión</h3>
                </div>
                <div class="card-body p-4">
                    <EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
                        @if (!string.IsNullOrEmpty(errorMessage))
                        {
                            <div class="alert alert-danger">@errorMessage</div>
                        }

                        <div class="mb-3">
                            <label class="form-label">Email</label>
                            <InputText @bind-Value="loginModel.Email" class="form-control" />
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Contraseña</label>
                            <InputText type="password" @bind-Value="loginModel.Password" class="form-control" />
                        </div>

                        <button type="submit" class="btn btn-primary w-100" disabled="@isLoading">
                            @(isLoading ? "Iniciando..." : "Iniciar Sesión")
                        </button>
                    </EditForm>

                    <div class="text-center mt-3">
                        <a href="/registro">¿No tienes cuenta? Regístrate</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private LoginDto loginModel = new();
    private string errorMessage = string.Empty;
    private bool isLoading = false;

    private async Task HandleLogin()
    {
        isLoading = true;
        errorMessage = string.Empty;

        try
        {
            var response = await AuthService.LoginAsync(loginModel);
            if (response != null)
            {
                Navigation.NavigateTo(response.Usuario?.Rol == "BARBERO" ? "/citas-barbero" : "/mis-citas");
            }
            else
            {
                errorMessage = "Email o contraseña incorrectos";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Error: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }
}